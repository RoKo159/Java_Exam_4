1. Wykorzystując optional:
- zapytaj użytkownika o jego imie, jeśli imie będzie podane to wypisz długość imienia, jeśli nie to wypisz 0.
- zapytaj użytkownika o pesel, jeśli będzie podany poprawny pesel (11 zankow powiedzmy wiekszej walidacji nie ma co robic, no i nie null i nie pusty) to bierzemy date urodzenia z tego numeru, w przeciwnym przypadku rzucamy wyjatkiem InvlaidPeselException
2. Wykorzystując optionale i streamy:
- napisz metode ktora jako argument pobiera liste integerow a jako wynik zwraca 5 najwkeiszych elementow na liscie, lub pustą listę jeśli z jakiegokolwiek powodu nie da rady znaleźć 5 najwiekszych elementow
3. Stworz sobie klase Osoba (imie, nazwisko, miasto, wiek)
- metoda co zwraca najstarsza kobiete (imie konczy sie na 'a') - lub NoWomenException jesli brak kobiet na liscie
- metode ktora zwraca sredni wiek wszystkich osob
- metode ktora zwraca sredni wiek mezczyzn
- metode ktora zwrca sredni wiek kobiet
- metode ktora agreguje dwie metody powyzej (tzn: jako drugi parametr przyjmuje funkcje ktora okresla plec)
- metode ktora znajdze miasto w ktorym zyje najwiecej ludzi
- metode ktora zwroci wszystkie rozne miasta z listy osob (rozne tzn: bez powtorzen)
4. Stworzona klase Osoba dodaj do zbioru TreeSet, domyslnie powinni byc posortowani po wieku od najmlodszego do najstarszego
co sie stanie jak beda dwie osoby o tym samym wieku?
zrob tak aby bylo dobrze:)